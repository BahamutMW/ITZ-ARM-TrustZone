Print 'not implemented' message in pthread stubs

From: Christian Prochaska <christian.prochaska@genode-labs.com>


---
+++ src/lib/libc/lib/libc/gen/_pthread_stubs.c
@@ -33,6 +33,8 @@ __FBSDID("$FreeBSD$");
 
 #include "libc_private.h"
 
+#include <libc_pdbg.h>
+
 /*
  * Weak symbols: All libc internal usage of these functions should
  * use the weak symbol versions (_pthread_XXX).  If libpthread is
@@ -138,12 +140,14 @@ pthread_func_entry_t __thr_jtable[PJT_MAX] = {
 	typedef ret (*FUNC_TYPE(name))(void);			\
 	static ret FUNC_EXP(name)(void)				\
 	{							\
+		PDBG("%s called, not implemented", #name);	\
 		FUNC_TYPE(name) func;				\
 		func = (FUNC_TYPE(name))__thr_jtable[idx][0];	\
 		return (func());				\
 	}							\
 	static ret FUNC_INT(name)(void)				\
 	{							\
+		PDBG("%s called, not implemented", #name);	\
 		FUNC_TYPE(name) func;				\
 		func = (FUNC_TYPE(name))__thr_jtable[idx][1];	\
 		return (func());				\
@@ -157,12 +161,14 @@ pthread_func_entry_t __thr_jtable[PJT_MAX] = {
 	typedef ret (*FUNC_TYPE(name))(p0_type);		\
 	static ret FUNC_EXP(name)(p0_type p0)			\
 	{							\
+		PDBG("%s called, not implemented", #name);	\
 		FUNC_TYPE(name) func;				\
 		func = (FUNC_TYPE(name))__thr_jtable[idx][0];	\
 		return (func(p0));				\
 	}							\
 	static ret FUNC_INT(name)(p0_type p0)			\
 	{							\
+		PDBG("%s called, not implemented", #name);	\
 		FUNC_TYPE(name) func;				\
 		func = (FUNC_TYPE(name))__thr_jtable[idx][1];	\
 		return (func(p0));				\
@@ -176,12 +182,14 @@ pthread_func_entry_t __thr_jtable[PJT_MAX] = {
 	typedef ret (*FUNC_TYPE(name))(p0_type, p1_type);	\
 	static ret FUNC_EXP(name)(p0_type p0, p1_type p1)	\
 	{							\
+		PDBG("%s called, not implemented", #name);	\
 		FUNC_TYPE(name) func;				\
 		func = (FUNC_TYPE(name))__thr_jtable[idx][0];	\
 		return (func(p0, p1));				\
 	}							\
 	static ret FUNC_INT(name)(p0_type p0, p1_type p1)	\
 	{							\
+		PDBG("%s called, not implemented", #name);	\
 		FUNC_TYPE(name) func;				\
 		func = (FUNC_TYPE(name))__thr_jtable[idx][1];	\
 		return (func(p0, p1));				\
@@ -195,12 +203,14 @@ pthread_func_entry_t __thr_jtable[PJT_MAX] = {
 	typedef ret (*FUNC_TYPE(name))(p0_type, p1_type, p2_type); \
 	static ret FUNC_EXP(name)(p0_type p0, p1_type p1, p2_type p2) \
 	{							\
+		PDBG("%s called, not implemented", #name);	\
 		FUNC_TYPE(name) func;				\
 		func = (FUNC_TYPE(name))__thr_jtable[idx][0];	\
 		return (func(p0, p1, p2));			\
 	}							\
 	static ret FUNC_INT(name)(p0_type p0, p1_type p1, p2_type p2) \
 	{							\
+		PDBG("%s called, not implemented", #name);	\
 		FUNC_TYPE(name) func;				\
 		func = (FUNC_TYPE(name))__thr_jtable[idx][1];	\
 		return (func(p0, p1, p2));			\
